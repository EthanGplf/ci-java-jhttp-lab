pipeline:
  identifier: Build_ci_java_jhttp_lab_v2
  name: Build_ci_java_jhttp_lab_v2
  orgIdentifier: default
  projectIdentifier: default_project
  properties:
    ci:
      codebase:
        build: <+input>
        connectorRef: org.github_ci_connector
        repoName: ci-java-jhttp-lab
  stages:
    - stage:
        identifier: build
        name: build
        spec:
          caching:
            enabled: true
          cloneCodebase: true
          execution:
            steps:
              - step:
                  names: Run Unit Tests
                  type: Run
                  identifier: run_tests
                  name: Build Java App
                  spec:
                    shell: Sh
                    image: maven:3.8-jdk-11
                    command: mvn clean test
              - step:
                  name: Package App
                  identifier: package_app
                  type: Run
                  spec:
                    shell: Sh
                    image: maven:3.8-jdk-11
                    command: mvn package -DskipTests
              - step:
                  name: Build and Push Multi-Arch Docker Image
                  identifier: BuildAndPushDocker
                  type: Run
                  spec:
                    connectorRef: your_dockerhub_connector
                    image: docker:24.0.2
                    shell: Sh
                    command: |
                      # Install dependencies
                      apk add --no-cache docker-cli-buildx

                      # Set up Docker buildx
                      docker buildx create --use --name harness-multiarch-builder || docker buildx use harness-multiarch-builder
                      docker buildx inspect --bootstrap

                      # Authenticate to Docker Hub (already handled if using a connector)
                      echo "$HARNESS_DOCKER_PASSWORD" | docker login -u "$HARNESS_DOCKER_USERNAME" --password-stdin

                      # Build and push multi-arch image
                      docker buildx build --platform linux/amd64,linux/arm64 \
                        -t esglusto/ci-java-jhttp:<+pipeline.sequenceId> \
                        --push .
                    environmentVariables:
                      HARNESS_DOCKER_USERNAME: <+secrets.getValue("dockerhub_username")>
                      HARNESS_DOCKER_PASSWORD: <+secrets.getValue("dockerhub_password")>
                    resources:
                      limits:
                        memory: 2Gi
                        cpu: 2000m
          platform:
            os: Linux
            arch: Arm64
          runtime:
            type: Cloud
            spec: {}
        type: CI
    - stage:
        name: deploy
        identifier: deploy
        description: Deploys the built Java HTTP app to a local Minikube cluster using Kubernetes manifests
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: cijavajhttpservice
          environment:
            environmentRef: Dev
            deployToAll: false
            infrastructureDefinitions:
              - identifier: minikubeinfra
          execution:
            steps:
              - step:
                  name: Rollout Deployment
                  identifier: rolloutDeployment
                  type: K8sRollingDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    pruningEnabled: false
            rollbackSteps:
              - step:
                  name: Rollback Rollout Deployment
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  timeout: 10m
                  spec:
                    pruningEnabled: false
        tags:
          java: ""
          minikube: ""
          deployment: ""
          interview-lab: ""
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
